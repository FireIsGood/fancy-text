---
import Favicon from "@/components/Favicon.astro";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description: string;
  viewTransition: boolean;
}

const { title, description, viewTransition } = Astro.props;
---

<head>
  {viewTransition && <ViewTransitions />}
  <meta charset="UTF-8" />
  <meta name="description" content={description} />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
  <meta name="color-scheme" content="light dark" />
  <Favicon />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css" />
  <script is:inline>
    // This must be inline to stop FOUC

    // Get the theme from local storage, otherwise color scheme preference, otherwise light
    const theme = (() => {
      if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    // Set a data attribute for Pico, but don't store it
    // (users may change their preference between visits)
    document.documentElement.setAttribute("data-theme", theme);
  </script>
  <title>{title}</title>
</head>
